1
00:00:00,000 --> 00:00:01,782
じゃあ、カシュから。

2
00:00:01,882 --> 00:00:02,882
カシュから。

3
00:00:02,982 --> 00:00:04,920
（気体が漏れる音）

4
00:00:05,579 --> 00:00:07,051
いきますよ……では。

5
00:00:08,214 --> 00:00:09,221
（破裂音）

6
00:00:09,321 --> 00:00:10,321
はい。

7
00:00:10,655 --> 00:00:13,871
はい、じゃあよろしくお願いします。

8
00:00:17,048 --> 00:00:18,520
プハーッ

9
00:00:18,620 --> 00:00:21,814
ちゃんと退勤を押しましたか。

10
00:00:21,914 --> 00:00:22,914
退勤を。

11
00:00:23,014 --> 00:00:27,122
（笑）

12
00:00:27,222 --> 00:00:30,377
退勤押して、ビール飲んでポッドキャスト……

13
00:00:30,477 --> 00:00:31,733
そう。覗きこまれないといいけど。

14
00:00:31,833 --> 00:00:32,833
そうそう。

15
00:00:33,399 --> 00:00:36,925
すごいオフィスの執務室から見えているっていう。

16
00:00:37,025 --> 00:00:44,062
（聞き取れず）

17
00:00:44,162 --> 00:01:02,636
じゃあ、さっそく本題に入っていきたいと思いますけど、先日[MySQL Cluster Casual Talks](http://atnd.org/events/50736)っていうのがありましたね。僕とかcon_mameさんは出てましたが、どうでした？

18
00:01:03,632 --> 00:01:04,986
まず[ConoHa](https://www.conoha.jp/)がかわいい。

19
00:01:05,086 --> 00:01:06,660
（笑）

20
00:01:06,760 --> 00:01:08,994
ConoHaは……かわいかったですね。

21
00:01:09,451 --> 00:01:22,452
よかったですね。あの[yoku](https://twitter.com/yoku0825)さん（？）っていうMySQLエースの方にすごい迷惑をかけてしまって……。GMOメディアのところに上がってしまって申し訳なかった。

22
00:01:22,552 --> 00:01:24,002
GMOに……

23
00:01:28,042 --> 00:01:32,676
結局、実用段階と言っていいんでしょうか、これは。

24
00:01:33,926 --> 00:01:58,680
実用的には、やっぱりなんだろう、MySQL Cluster特有の設定だとか障害みたいな、障害っていうか勘所みたいなのはあるから、それをちゃんと専属でしばらくいじれるモチベーションと人がいれば実用段階なんじゃないかなって思ってて、（聞き取れず）Casual Talksに行って、それを再認識した感じ。

25
00:01:58,780 --> 00:02:03,967
確かに、すごい執着している人……じゃないと……

26
00:02:04,879 --> 00:02:06,523
（笑）

27
00:02:06,623 --> 00:02:08,809
未曾有の罠がありそうな感じが。

28
00:02:08,909 --> 00:02:32,812
やっぱり、他のものと協調して動いてるってとこで、コンカレンシーの問題だったりとか、バッファリングの問題だったりとか、ワークロードで結構違うと思うし、データ量によっても変わってくるから、たぶんベストプラクティスっていうのは存在しない……データベースではあまり存在しないけど……さらにそれが存在しなくなるんじゃないかっていう。

29
00:02:32,912 --> 00:02:33,912
うん。

30
00:02:34,326 --> 00:02:45,795
細かくこう見て、常になんか変化があったらそれに対応できる状態じゃないと、まだちょっと早いんじゃないかなっていう感じは……

31
00:02:46,299 --> 00:02:52,266
ウェブサービスのバックエンドで気軽に使うみたいな感じのものではない？

32
00:02:52,366 --> 00:03:14,196
まだない。特にウェブだとソシャゲとかイベントとか、普通にやってもピークの時間帯とかでワークロードがすごい変わってきたりする場合、どこに合わせるんだみたいな。ピークに当てとくとマシンリソースめっちゃ食うしっていう……のが結構顕著に出ちゃうんじゃないかなっていう。

33
00:03:14,296 --> 00:03:33,608
うん……確かに。あと、カリカリにチューンしたすごい高価なハードウェアを大量に使ってMySQL Clusterを運用するなら、そんだけの機材があるなら普通のMySQLでも全然……っていう話が出てましたね、Casual Talkで。

34
00:03:33,708 --> 00:03:36,785
それ普通のMySQLでいいんじゃないのっていう。

35
00:03:36,885 --> 00:03:40,040
Fusion-ioとか積んでしまうっていう。

36
00:03:40,140 --> 00:03:44,612
そうですね。それだけの機材があったら普通のMySQLで大体解決しちゃいそうな。

37
00:03:44,712 --> 00:04:05,651
そうですね。やっぱDBだからメモリから外れた時にどうするかって悩むとこで、いま結構Fusionとかもオンプレミスの環境で安くなってきて入れやすくなってきてはいるから、そこを思うと……どうなんだろうっていう。オンプレの環境だと。

38
00:04:05,923 --> 00:04:06,923
そうですね。

39
00:04:07,023 --> 00:04:16,888
MySQL ClusterもオンメモリにしててもIOが出ますって書いてあってましたね。（聞き取れず）ログを書くのに。

40
00:04:17,198 --> 00:04:22,351
ああ、確かに。まあログを書くのには……

41
00:04:22,451 --> 00:04:25,141
ログっつーか、binlogみたいなやつ。

42
00:04:25,241 --> 00:04:26,846
そうですよね……

43
00:04:30,914 --> 00:04:41,918
まあとりあえず、これを聞いてる人たちはMySQL Clusterを入れるのは、だいぶ覚悟を持って入れてくださいという。執着心。

44
00:04:41,950 --> 00:04:43,018
執着心。

45
00:04:43,018 --> 00:04:46,955
何があってもMySQL Clusterで行くんだという、強い気持ちを。

46
00:04:47,055 --> 00:05:29,576
あとまあ、何が変わったかですよね。7.2から7.3で何が変わったかみたいなのをちゃんと。まあそれ多分どんなミドルウェア使うにしても何が変わってどう良くなって、どう変えてやんなきゃいけないかみたいな。たぶん知っとかないと、「あれ？」ってことに。たとえば7.3だとベースがMySQL 5.6に変わったとか。そうすると5.6の設定に引きずられてったりとか、そういうのが。まあそのぶん早くなってはいるんですけど。でもそういうのに追従できるとか、意外とまだちょっと辛いんじゃないかなっていう……感じが……しないでもない。

47
00:05:30,196 --> 00:05:33,102
やっぱ、利用事例がね、大事っすよね。

48
00:05:33,102 --> 00:05:34,497
利用事例……

49
00:05:34,497 --> 00:05:40,812
エンタープライズじゃない、なんか渋谷の会社とかがガンガン使ってるような状況になってったら、いいなと。

50
00:05:40,912 --> 00:05:42,711
そうですね。

51
00:05:43,060 --> 00:05:45,152
深夜に突撃されても耐えうる……

52
00:05:45,252 --> 00:05:46,314
（笑）

53
00:05:46,414 --> 00:05:47,414
そうでないと……

54
00:05:47,514 --> 00:05:48,514
そうっすね。

55
00:05:48,614 --> 00:05:53,366
まあでもチャレンジとしては結構扱うのは面白いのかもしれないね。

56
00:05:53,466 --> 00:06:02,152
奥野さんの記事とかを読むと、もう夢のDBだから今すぐ使うしかないみたいな……

57
00:06:02,152 --> 00:06:02,549
（笑）

58
00:06:02,549 --> 00:06:10,957
使わない理由ゼロっていう感じがすごい伝わってくるけど……現場はそんな感じではない雰囲気がしますね。

59
00:06:11,057 --> 00:06:12,562
（笑）

60
00:06:12,662 --> 00:06:15,529
まあデータストアは難しいですよね。

61
00:06:15,629 --> 00:06:48,425
分散でさらに難しさが上がっている。あと、MySQL Cluster、Casual Talksではオンプレで使うっていう話がすごいメインになっていて、我々が働いているクックパッドではAWSを使ってるので、MySQL ClusterをAWSで使うとしたら、どういう構成の選択肢があるのかね。

62
00:06:48,525 --> 00:07:43,910
難しいですよね。オンプレを上手くマッピングできないから、そうですね、作るとしたらFusionだって言ってる部分でデータノードに関してはI2シリーズのインスタンスでephemeral SSDをRAIDで固めてIOPSをめっちゃ稼いで、ノード同士は[Placement Group](http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/placement-groups.html)っていう物理的に近い場所にインスタンスが配置されて、10Gフルでupもdownも出るっていうPlacement Groupっていう機能がAWSにはHPC用にあって、それに組み込んでやると、結構似たような環境になって、いいんじゃないかなとは思うんですよね。IOとネットワークはそれでクリアできるんじゃないかなっていう感じはするんですけど、いかんせんちょっと高い。

63
00:07:44,010 --> 00:07:44,910
（笑）

64
00:07:44,910 --> 00:07:55,379
……のと、やっぱPlacement Groupの欠点は物理的に近いとこにインスタンスを起動するっていうモチベーションなんで、起動してこないことがあるっていう。

65
00:07:55,479 --> 00:07:56,079
へー。

66
00:07:56,079 --> 00:07:57,786
確率が下がるのか。

67
00:07:57,786 --> 00:08:12,156
近くに起動できなかった場合は起動が失敗するっていうのとか、動いてる時にダイナミックにPlacement Groupを切り替えたりできない。まあ後から追加ぐらいだったらいいんですけど。

68
00:08:12,256 --> 00:08:16,069
Placement Groupってどういう課金になるんでしたっけ。

69
00:08:16,169 --> 00:08:29,902
課金はないですね。HPCをAWS上でやりたいっていう時にそこに普通に入れてやるとネットワーク的に近くなる。で、フルで10G出るっていう。

70
00:08:30,002 --> 00:08:31,429
でも失敗するかもしれない……

71
00:08:31,429 --> 00:08:34,784
失敗する可能性が高いと。でもまあ……

72
00:08:34,884 --> 00:08:36,333
一回（聞き取れず）っちゃえばね。

73
00:08:36,433 --> 00:08:49,120
そうそう。HPC自体は何十台何百台ガンッて立てたい時には上がんないとか。普通に十何ノードとかだと多分上がってくるんだろうっていう。ただI2はやっぱりちょっと高いかなっていう。

74
00:08:49,120 --> 00:08:53,498
I2は高いですね。やっぱメモリー、高いすっよね。

75
00:08:53,598 --> 00:08:54,598
（笑）

76
00:08:56,017 --> 00:08:58,768
見かけでは出せないから難しい。

77
00:08:58,768 --> 00:08:59,868
そうですね。

78
00:08:59,968 --> 00:09:37,049
あと、Fusionだと結構Fusion-ioのカードの中でRAIDみたいなの組んで障害耐性を上げつつ、さらにカード二枚刺しとかで障害耐性さらに上げるっていう戦略が取れるんですけど、I2だと結局ephemeralのSSDに乗っけるしかできないんで、ephemeralが故障したらとか、バックアップ……。バックアップがMySQL Clusterでどこまで重要かっていうのは結構怪しいんですけど、バックアップ・リストアがEBSスナップショットよりかはやりにくいし、時間もまあ掛かるっていう。まあちょっと辛いかなっていう。

79
00:09:37,149 --> 00:09:38,149
そうですね。

80
00:09:38,249 --> 00:09:40,342
（聞き取れず）辛いという。

81
00:09:40,442 --> 00:09:41,442
（笑）

82
00:09:41,542 --> 00:09:46,154
AWSではお金が掛かるし、辛い……

83
00:09:46,254 --> 00:10:02,312
そうですね。あんまりスペックの高くないインスタンスで上げちゃうと、そもそも1Gしか仮想NICが刺さってなかったりっていう違いが。だからあまりアクセスのないところにMySQL Clusterを入れるんだったらいいかもしれないですけど……

84
00:10:03,087 --> 00:10:04,636
じゃあ何のために使ってるか分かんない（笑）

85
00:10:04,736 --> 00:10:12,967
M3とかあのへんでメモリーがっつり乗っけちゃえばいいんじゃないのみたいな感じはしますね。

86
00:10:13,781 --> 00:10:14,982
お金がある人向け……

87
00:10:15,082 --> 00:10:16,082
（笑）

88
00:10:16,182 --> 00:10:17,182
そうですね。

89
00:10:17,282 --> 00:10:25,714
お金があったら、もっと商用の分散DBが選択肢に入ってくる気がしますよ。

90
00:10:25,814 --> 00:10:35,324
でも、安いものを並べてパフォーマンスを出す、Hadoopみたいな気持ちで使えないのかなみたいな。

91
00:10:35,424 --> 00:10:40,399
あー。安い設備を買ってきて。

92
00:10:40,499 --> 00:10:42,104
買ってきて並べる。

93
00:10:42,204 --> 00:10:43,204
そういうDIY精神が……

94
00:10:43,304 --> 00:10:46,405
DIY精神でやるとどうなんだろう。

95
00:10:46,505 --> 00:10:48,420
できるかもしれない。

96
00:10:48,768 --> 00:10:54,038
どうなんですかね。Hadoopは最近は安いハードウェアだと性能出ませんよみたいな……

97
00:10:54,138 --> 00:10:56,069
（笑）

98
00:10:56,169 --> 00:10:58,145
一番いいやつ使うんでしょ。

99
00:10:58,245 --> 00:10:59,346
（笑）

100
00:10:59,446 --> 00:11:01,710
出た、Hadoop dis。

101
00:11:01,810 --> 00:11:03,841
（笑）

102
00:11:10,118 --> 00:11:18,332
MySQL Clusterの制限、っていうかまあ、BlobとText型が含まれてはいけないってのがありますね。

103
00:11:18,432 --> 00:11:18,952
あー。

104
00:11:19,424 --> 00:11:20,424
そうなんだっけ。

105
00:11:20,524 --> 00:11:21,524
Text辛いですね。

106
00:11:21,624 --> 00:11:22,624
確かに。

107
00:11:23,330 --> 00:11:24,725
現実世界には。

108
00:11:24,825 --> 00:11:35,070
現実世界では使ってるよねっていう。クエリの結果に含まれてはいけないっていう制限があるんで。

109
00:11:37,201 --> 00:11:39,449
ブログシステムが作れない（笑）

110
00:11:39,549 --> 00:11:42,665
（笑）

111
00:11:44,253 --> 00:11:46,013
（聞き取れず）

112
00:11:46,113 --> 00:11:51,964
だからある程度その、まあ動くようなせっ……これ……

113
00:11:52,064 --> 00:11:53,707
だいぶ限定されそうですね、そうしたら。

114
00:11:53,807 --> 00:11:58,357
でも世の中、使ってないんすかね？　BlobとTextは。

115
00:11:59,093 --> 00:12:00,217
うーん。

116
00:12:00,317 --> 00:12:02,387
まあBlobは分かりますけどね。

117
00:12:02,487 --> 00:12:04,053
実際、要ります？

118
00:12:04,153 --> 00:12:06,184
いやあ、でもBlobの中になんか画像……

119
00:12:06,284 --> 00:12:08,470
（笑）

120
00:12:08,570 --> 00:12:09,570
（聞き取れず）なんか聞いたことある。

121
00:12:09,670 --> 00:12:11,376
うわー、あるけど……

122
00:12:12,848 --> 00:12:17,808
画像アップロード先がMySQLとか。

123
00:12:17,908 --> 00:12:22,690
まあそういう人たちは素直にRiakとかに置き換えたほうが幸せになれる。

124
00:12:22,790 --> 00:12:24,433
Riak（笑）

125
00:12:24,533 --> 00:12:25,983
Riakになすりつけましたね。

126
00:12:26,083 --> 00:12:27,610
（笑）

127
00:12:32,493 --> 00:12:41,637
じゃあ次、行きますか。5.6の話をしましょう。5.6……今、5.6……今は？

128
00:12:41,737 --> 00:12:47,565
5.6.……いくつだったかな、30とかなってたかな。

129
00:12:47,665 --> 00:12:48,356
30……

130
00:12:48,456 --> 00:12:49,890
あー、結構行ってた。
